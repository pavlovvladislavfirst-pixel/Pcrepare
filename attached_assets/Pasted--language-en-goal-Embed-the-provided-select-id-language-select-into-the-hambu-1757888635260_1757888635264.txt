{
  "language": "en",
  "goal": "Embed the provided <select id=\"language-select\"> into the hamburger (mobile/tablet) and into the header (desktop), remove any pinned/old language switchers, tidy header spacing/placement, and make the 'Transparent Prices' section fully responsive on mobile. Do this client-side via 1 CSS + 1 JS with tiny HTML includes.",
  "changes": [
    {
      "path": "addons/addons.css",
      "write": "/* === NeoConsult: header tidy + language select + prices mobile === */\n:root{--nc-bg:#ffffff;--nc-fg:#0b1220;--nc-border:#e5e7eb}\n/* Header layout */\nheader.nc-header{background:var(--nc-bg)}\nheader.nc-header .nc-wrap{max-width:1200px;margin:0 auto;padding:10px 16px;display:flex;align-items:center;gap:16px}\n.nc-brand{display:flex;align-items:center;gap:10px;margin-left:10px}\n.nc-logo{height:28px;width:auto;display:block;max-width:50vw}\n.site-nav{display:flex;align-items:center;gap:24px;margin-left:auto}\n/* Remove any old/pinned switchers */\n.lang-switcher, .language-switcher{display:none!important}\n/* Language <select> styling (desktop header + mobile menu) */\n#language-select{appearance:none;border:1px solid var(--nc-border);background:var(--nc-bg) url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 24 24'%3E%3Cpath fill='%230b1220' d='M7 10l5 5l5-5z'/%3E%3C/svg%3E\") no-repeat right 10px center/12px 12px;color:var(--nc-fg);padding:6px 28px 6px 10px;border-radius:8px;font-weight:600}\n/* two instances: .lang-desktop shows only on desktop, .lang-mobile only inside mobile menu */\n.lang-desktop{display:none}\n@media(min-width:993px){.lang-desktop{display:inline-flex}}\n@media(max-width:992px){.site-nav #language-select{width:100%;margin-top:8px}}\n/* Prices section responsive */\n.nc-prices .grid,.nc-prices .pricing-grid,.nc-prices .price-grid,.nc-prices .cards{display:grid;grid-template-columns:repeat(3,minmax(0,1fr));gap:16px}\n@media(max-width:992px){.nc-prices .grid,.nc-prices .pricing-grid,.nc-prices .price-grid,.nc-prices .cards{grid-template-columns:repeat(2,minmax(0,1fr))}}\n@media(max-width:640px){.nc-prices .grid,.nc-prices .pricing-grid,.nc-prices .price-grid,.nc-prices .cards{grid-template-columns:1fr}}\n.nc-prices .card,.nc-prices .plan-card,.nc-prices .pricing-card{display:flex;flex-direction:column}\n.nc-prices .card .actions,.nc-prices .plan-card .actions,.nc-prices .pricing-card .actions{display:flex;gap:12px;margin-top:auto;align-items:stretch}\n.nc-prices .card .actions a,.nc-prices .card .actions button,.nc-prices .plan-card .actions a,.nc-prices .plan-card .actions button{flex:1 1 0;min-height:48px;display:flex;justify-content:center;align-items:center;white-space:nowrap}\n/* Slightly tighter hero on small screens (keeps layout stable) */\n.hero h1, h1.hero-title, .section-hero h1, .hero .title{font-size:clamp(24px,5vw+8px,56px);line-height:1.15}\n.hero p, .hero .subtitle{font-size:clamp(16px,2.8vw+6px,22px);line-height:1.4}\n"
    },
    {
      "path": "addons/addons.js",
      "write": "/* === NeoConsult: embed <select id=\"language-select\"> + header tidy + prices hook === */\n(function(){\n  const LANG_KEY='preferred-language';\n  function currentLang(){ const ls=localStorage.getItem(LANG_KEY); if(ls) return ls; return (document.documentElement.getAttribute('lang')||(navigator.language||'en')).slice(0,2).toLowerCase(); }\n  function setLang(lang){ localStorage.setItem(LANG_KEY,lang); document.documentElement.setAttribute('lang',lang); applyLangVisibility(lang); if(typeof window.setLanguage==='function'){ try{ window.setLanguage(lang);}catch(_){}} }\n  function applyLangVisibility(lang){ document.querySelectorAll('[lang]').forEach(el=>{ if(el===document.documentElement) return; const v=(el.getAttribute('lang')||'').slice(0,2).toLowerCase(); if(v&&['ru','ro','en'].includes(v)) el.style.display=(v===lang)?'':'none'; }); }\n  function buildSelect(idClass){ const sel=document.createElement('select'); sel.id='language-select'; sel.className=idClass||''; sel.setAttribute('aria-label','Select language'); sel.innerHTML = \"<option value='en' data-i18n='lang.en'>EN</option><option value='ru' data-i18n='lang.ru'>RU</option><option value='ro' data-i18n='lang.ro'>RO</option>\"; sel.value=currentLang(); sel.addEventListener('change',()=>{ const v=sel.value; document.querySelectorAll('#language-select').forEach(s=>{ if(s!==sel) s.value=v; }); setLang(v); }); return sel; }\n  function tidyHeader(){\n    const header=document.querySelector('header')||document.querySelector('.site-header'); if(!header) return;\n    header.classList.add('nc-header');\n    let wrap=header.querySelector('.nc-wrap'); if(!wrap){ wrap=document.createElement('div'); wrap.className='nc-wrap'; while(header.firstChild){ wrap.appendChild(header.firstChild);} header.appendChild(wrap); }\n    const nav=wrap.querySelector('nav')||wrap.querySelector('.menu,.navbar')||header.querySelector('nav'); if(nav) nav.classList.add('site-nav');\n    // remove any old switchers\n    header.querySelectorAll('.lang-switcher, .language-switcher').forEach(n=>n.remove());\n    // desktop select (right side of header)\n    if(!wrap.querySelector('.lang-desktop')){ const sDesktop=buildSelect('lang-desktop'); (nav? nav.parentElement:wrap).appendChild(sDesktop); }\n    // mobile select inside hamburger menu (end of nav)\n    if(nav && !nav.querySelector('#language-select')){ const sMobile=buildSelect('lang-mobile'); nav.appendChild(sMobile); }\n  }\n  function hookPrices(){\n    // Find section with a title like 'Прозрачные цены' / 'Transparent prices' / 'Prețuri transparente'\n    const titleRE=/(Прозрачн|Transparent\\s+Prices|Prețuri\\s+transparente)/i; const headings=[...document.querySelectorAll('h1,h2,h3')];\n    const h=headings.find(x=>titleRE.test((x.textContent||'').trim())); if(!h) return; const sec=h.closest('section')||h.parentElement; if(!sec) return; sec.classList.add('nc-prices');\n    // If a grid wrapper is missing, try to mark a likely container as grid\n    const grid=sec.querySelector('.grid,.pricing-grid,.price-grid,.cards'); if(!grid){ const wrap=Array.from(sec.children).find(el=>el.querySelector&& (el.querySelector('.card,.plan-card,.pricing-card'))); if(wrap) wrap.classList.add('grid'); }\n  }\n  document.addEventListener('DOMContentLoaded',()=>{ try{ tidyHeader(); applyLangVisibility(currentLang()); hookPrices(); }catch(e){ console.warn('addons error', e); } });\n})();\n"
    },
    {
      "path": "index.html",
      "insert_before": "</head>",
      "content": "\n<link rel=\"stylesheet\" href=\"/addons/addons.css\">\n"
    },
    {
      "path": "index.html",
      "insert_before": "</body>",
      "content": "\n<script src=\"/addons/addons.js\" defer></script>\n"
    }
  ],
  "notes": "The provided <select id=\"language-select\"> is inserted in two places: inside the hamburger menu (mobile/tablet) and as a desktop control in the header (right side). Any old switchers (.lang-switcher/.language-switcher) are removed. The select writes <html lang> + localStorage and hides/shows [lang]-scoped elements; if site i18n exposes window.setLanguage(lang), it's called. The 'Transparent Prices' section is detected by its heading and made responsive (1/2/3 columns, equal CTAs). Header spacing/baseline is normalized with a flex wrapper."
}
